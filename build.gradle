plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
	id 'java'
	id 'java-library'
}

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	mavenLocal()
}

minecraft {
	accessWidener "src/main/resources/beacon.accesswidener"
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"

	// JNA
	include "net.java.dev.jna:jna:5.6.0"
	implementation "net.java.dev.jna:jna:5.6.0"
	include "net.java.dev.jna:jna-platform:5.6.0"
	implementation "net.java.dev.jna:jna-platform:5.6.0"

	// TerminalConsoleAppender
	include "net.minecrell:terminalconsoleappender:1.2.0"
	implementation "net.minecrell:terminalconsoleappender:1.2.0"

	// Dependencies for TerminalConsoleAppender for full functionality
	include "org.jline:jline-terminal-jna:3.12.1"
	implementation "org.jline:jline-terminal-jna:3.12.1"

	// Sponge Configurate
	include "org.spongepowered:configurate-yaml:3.7"
	implementation "org.spongepowered:configurate-yaml:3.7"
	include "org.spongepowered:configurate-core:3.7"
	implementation "org.spongepowered:configurate-core:3.7"
	include "org.yaml:snakeyaml:1.26"
	implementation "org.yaml:snakeyaml:1.26"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

javadoc {
	source = sourceSets.main.allJava
	exclude 'src/main/resources/*'
}

java {
	withJavadocJar()
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// Set artifactId
			artifactId = archivesBaseName
			// Add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		mavenLocal()
	}
}

build.finalizedBy(publish)
